
name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.9"
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-qt PyQt5 nuitka
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/test_app.py -v

  build:
    needs: test
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.9"
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 nuitka
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
    - name: Build with Nuitka
      run: |
        python -m nuitka main.py ^
          --standalone ^
          --onefile ^
          --mingw64 ^
          --enable-plugin=pyqt5 ^
          --output-dir=build ^
          --accept-downloads
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: pyqt5-app
        path: build/main.exe
